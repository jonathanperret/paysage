var io = io.connect();
var canvas = {};
var sketch = {};

// get the playground id from a data-attribute generated by the view. Hacky.
var container = document.getElementById('container');
var playgroundid = container.getAttribute('data-playgroundid');

// emit the 'playground up' event with the playgroundid (used as a room for select broadcasting)
io.emit('playground up', playgroundid);

io.on('code delete', function(data) {
  var id = data.objectId;
  console.log('delete code ' + id);

  try {
    sketch[id].exit();
  } catch(e) { }
  delete sketch[id];
  var elem = document.getElementById(id);
  elem.parentNode.removeChild(elem);
  delete canvas[id];
});

io.on('code update', function(data) {
  var id = data.objectId;
  var code = data.code;
  console.log('code received '+id, data);

  updateObject(id, code);
});

io.on('playground full update', function (data) {
  Object.keys(data).forEach(
      function (objectId) {
          updateObject(objectId, data[objectId].code);
      }
  );
});

var resize = function (sketch) {
  sketch.size(window.innerWidth, window.innerHeight);
};

// If background() is in draw(), it's redrawn each frame
// setting it to transparent using the instance method sketch[].background(255, 255, 255.0) doesn't stick
// so we rewrite the code:

var rewriteBackgroundTransparent = function(code) {
  // thanks http://www.regexr.com/
  var match = /background\s*(\(.*?\))/g;
  var transparent = "background(255, 255, 255, 0)";
  return code.replace(match, transparent);
};

var updateObject = function (id, code) {
  if (!canvas[id]) {
    canvas[id] = document.createElement('canvas');
    canvas[id].setAttribute('id', id);

    document.getElementById('container').appendChild(canvas[id]);
    console.log('canvas created for '+id);
  } else {
    console.log('canvas reused for '+id);
    try {
      sketch[id].exit();
    } catch(e) { }
    delete sketch[id];
  }
  code = rewriteBackgroundTransparent(code);
  sketch[id] = new Processing(canvas[id], code);
  resize(sketch[id]);
};

var resizeTimeout;

window.addEventListener('resize', function () {
  clearTimeout(resizeTimeout);
  resizeTimeout = setTimeout(function () {
    Object.keys(sketch).forEach(function (id) {
      resize(sketch[id]);
    });
  }, 1000);
});
